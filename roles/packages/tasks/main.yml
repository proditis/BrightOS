---
####################
# fzf dependencies #
####################

# Note: fzf depends on perl and git. The installation needs tar, go and curl.
# fzf itself is installed via the OS-specific files
- name: Install fzf dependencies
  ansible.builtin.package:
    name:
      - curl
      - git
      - golang
      - perl
      - tar
    state: latest

- name: Copy .fzf.bash for root and playbook users
  ansible.builtin.copy:
    src: "{{ ansible_os_family }}.fzf.bash"
    dest: '{{ item }}/.fzf.bash'
    mode: 0644
  loop:
    - /root
    - /home/{{ playbook_user | default(ansible_user_id) }}

# [ -f ~/.fzf.bash ] && source ~/.fzf.bash
- name: Ensure fzf.bash is loaded for root and playbook user
  ansible.builtin.lineinfile:
    path: "{{ item }}/.bashrc"
    # Double backslashes needed, since backslash is a special character in YAML
    regexp: "\\[ -f ~/\\.fzf\\.bash \\] && source ~/\\.fzf\\.bash"
    line: "[ -f ~/.fzf.bash ] && source ~/.fzf.bash"
  loop:
    - /root
    - /home/{{ playbook_user | default(ansible_user_id) }}


########################
# OS-specific packages #
########################

- name: Include task list appropriate for OS family (Debian/RedHat)
  ansible.builtin.include_tasks: "{{ ansible_os_family }}.yml"  


###############################################
# Packages with same names on all OS families #
###############################################

- name: Install common packages (available for all OS families)
  ansible.builtin.package:
    name:
      - htop           # Superior to top: https://github.com/htop-dev/htop
      - mlocate        # File finder: https://pagure.io/mlocate
      - python3          # Keeps Python up to date
      - python3-pip      # Keeps Pip up to date
      - python3-psutil   # Required, to Ansible manage dconf
      - tmux           # "terminal multiplexer": https://github.com/tmux/tmux


##########################
# Virtual machine agents #
##########################

- name: Check if we're a VMware guest
  ansible.builtin.shell: dmesg | grep -qi 'kernel.*vmware'
  register: vmware_guest
  ignore_errors: true
  changed_when: false
  failed_when: false

- name: Install VMware tools
  ansible.builtin.package:
    name: [open-vm-tools, open-vm-tools-desktop]
  when: vmware_guest.rc == 0

- name: Check if we're running under QEMU
  ansible.builtin.shell: dmesg | grep -qi qemu
  register: qemu_guest
  ignore_errors: true
  changed_when: false
  failed_when: false  

- name: Install QEMU agent
  ansible.builtin.package:
    name: [qemu-guest-agent]
  when: qemu_guest.rc == 0

# This will fail if the VM hasn't been fully shutdown and then started after
# installing qemu-guest-agent. Reboot is NOT enough.
# Hence, we'll ignore_errors for this task that WILL happen on the first run.
- name: Enable and start QEMU guest agent service
  ansible.builtin.service:
    name: qemu-guest-agent
    enabled: yes
    state: started
  when: qemu_guest.rc == 0
  ignore_errors: true

- name: Populate service facts
  ansible.builtin.service_facts:
  changed_when: false

# hv_kvp_daemon isn't needed (usually) and causes a delay on VM boot
- name: Disable Hyper-V Key Value Pair daemon
  ansible.builtin.service:
    name: hv-kvp-daemon
    enabled: no
    state: stopped
  when: ansible_facts.services['hv-kvp-daemon.service'] is defined
